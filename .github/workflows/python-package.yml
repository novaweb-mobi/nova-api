# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master, dev ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Check files ending with newline
      run: |
        function file_ends_with_newline() {
          if [ ! -s "$1" ]; then
            return 0
          else
            [[ $(tail -c2 "$1" | wc -l) -gt 0 ]]
          fi
        }

        function check_files() {
          for folder in $1/*; do
            if [ -d $folder ]; then
              check_files $folder
            elif [ -f $folder ] && [ ${folder: -3} == ".py" ]; then
              if ! file_ends_with_newline $folder; then
                echo "" >> "$folder"
              fi
            fi
          done
        }
        check_files $(pwd)/nova_api
    - name: Lint with pylint
      run: |
        export PYTHONPATH=$PYTHONPATH:$(pwd)/nova_api
        pylint nova_api -r n --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" > reports/lint_report
    - name: (Unit)Test with pytest
      run: |
        export PYTHONPATH=$PYTHONPATH:$(pwd)/nova_api
        pytest --junitxml=xunit-reports/xunit-result-nova_api.xml --cov=nova_api --cov-report xml:coverage-reports/coverage-python.xml  tests/unittests
